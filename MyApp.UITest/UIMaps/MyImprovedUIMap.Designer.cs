// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MyApp.UITest.UIMaps.MyImprovedUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class MyImprovedUIMap
    {
        
        #region Properties
        public MAP_MyAppMainWindow MAP_MyAppMainWindow
        {
            get
            {
                if ((this.mMAP_MyAppMainWindow == null))
                {
                    this.mMAP_MyAppMainWindow = new MAP_MyAppMainWindow();
                }
                return this.mMAP_MyAppMainWindow;
            }
        }
        #endregion
        
        #region Fields
        private MAP_MyAppMainWindow mMAP_MyAppMainWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_MyAppMainWindow : WpfWindow
    {
        
        public MAP_MyAppMainWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MyApp - Counter";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public MAP_TitleBar MAP_TitleBar
        {
            get
            {
                if ((this.mMAP_TitleBar == null))
                {
                    this.mMAP_TitleBar = new MAP_TitleBar(this);
                }
                return this.mMAP_TitleBar;
            }
        }
        
        public MAP_MyAppMainWindowTabControlTabList MAP_MyAppMainWindowTabControlTabList
        {
            get
            {
                if ((this.mMAP_MyAppMainWindowTabControlTabList == null))
                {
                    this.mMAP_MyAppMainWindowTabControlTabList = new MAP_MyAppMainWindowTabControlTabList(this);
                }
                return this.mMAP_MyAppMainWindowTabControlTabList;
            }
        }
        #endregion
        
        #region Fields
        private MAP_TitleBar mMAP_TitleBar;
        
        private MAP_MyAppMainWindowTabControlTabList mMAP_MyAppMainWindowTabControlTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_TitleBar : WpfTitleBar
    {
        
        public MAP_TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTitleBar.PropertyNames.AutomationId] = "TitleBar";
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public MAP_SystemMenuBar MAP_SystemMenuBar
        {
            get
            {
                if ((this.mMAP_SystemMenuBar == null))
                {
                    this.mMAP_SystemMenuBar = new MAP_SystemMenuBar(this);
                }
                return this.mMAP_SystemMenuBar;
            }
        }
        
        public WpfButton MAP_MinimizeButton
        {
            get
            {
                if ((this.mMAP_MinimizeButton == null))
                {
                    this.mMAP_MinimizeButton = new WpfButton(this);
                    #region Search Criteria
                    this.mMAP_MinimizeButton.SearchProperties[WpfButton.PropertyNames.Name] = "Minimize";
                    this.mMAP_MinimizeButton.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_MinimizeButton;
            }
        }
        
        public WpfButton MAP_MaximizeButton
        {
            get
            {
                if ((this.mMAP_MaximizeButton == null))
                {
                    this.mMAP_MaximizeButton = new WpfButton(this);
                    #region Search Criteria
                    this.mMAP_MaximizeButton.SearchProperties[WpfButton.PropertyNames.Name] = "Maximize";
                    this.mMAP_MaximizeButton.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_MaximizeButton;
            }
        }
        
        public WpfButton MAP_CloseButton
        {
            get
            {
                if ((this.mMAP_CloseButton == null))
                {
                    this.mMAP_CloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mMAP_CloseButton.SearchProperties[WpfButton.PropertyNames.Name] = "Close";
                    this.mMAP_CloseButton.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_CloseButton;
            }
        }
        #endregion
        
        #region Fields
        private MAP_SystemMenuBar mMAP_SystemMenuBar;
        
        private WpfButton mMAP_MinimizeButton;
        
        private WpfButton mMAP_MaximizeButton;
        
        private WpfButton mMAP_CloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_SystemMenuBar : WpfControl
    {
        
        public MAP_SystemMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "MenuBar";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SystemMenuBar";
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem MAP_Item1MenuItem
        {
            get
            {
                if ((this.mMAP_Item1MenuItem == null))
                {
                    this.mMAP_Item1MenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mMAP_Item1MenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Item 1";
                    this.mMAP_Item1MenuItem.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_Item1MenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mMAP_Item1MenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_MyAppMainWindowTabControlTabList : WpfTabList
    {
        
        public MAP_MyAppMainWindowTabControlTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "MyApp.MainWindow.TabControl";
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public MAP_MyAppMainWindowTabItem1TabPage MAP_MyAppMainWindowTabItem1TabPage
        {
            get
            {
                if ((this.mMAP_MyAppMainWindowTabItem1TabPage == null))
                {
                    this.mMAP_MyAppMainWindowTabItem1TabPage = new MAP_MyAppMainWindowTabItem1TabPage(this);
                }
                return this.mMAP_MyAppMainWindowTabItem1TabPage;
            }
        }
        
        public MAP_MyAppMainWindowTabItem2TabPage MAP_MyAppMainWindowTabItem2TabPage
        {
            get
            {
                if ((this.mMAP_MyAppMainWindowTabItem2TabPage == null))
                {
                    this.mMAP_MyAppMainWindowTabItem2TabPage = new MAP_MyAppMainWindowTabItem2TabPage(this);
                }
                return this.mMAP_MyAppMainWindowTabItem2TabPage;
            }
        }
        #endregion
        
        #region Fields
        private MAP_MyAppMainWindowTabItem1TabPage mMAP_MyAppMainWindowTabItem1TabPage;
        
        private MAP_MyAppMainWindowTabItem2TabPage mMAP_MyAppMainWindowTabItem2TabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_MyAppMainWindowTabItem1TabPage : WpfTabPage
    {
        
        public MAP_MyAppMainWindowTabItem1TabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "MyApp.MainWindow.TabItem1";
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public WpfText MAP_NEWTABITEMText
        {
            get
            {
                if ((this.mMAP_NEWTABITEMText == null))
                {
                    this.mMAP_NEWTABITEMText = new WpfText(this);
                    #region Search Criteria
                    this.mMAP_NEWTABITEMText.SearchProperties[WpfText.PropertyNames.AutomationId] = null;
                    this.mMAP_NEWTABITEMText.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_NEWTABITEMText;
            }
        }
        
        public WpfCustom MAP_MyAppMainWindowPowerButtonCustom
        {
            get
            {
                if ((this.mMAP_MyAppMainWindowPowerButtonCustom == null))
                {
                    this.mMAP_MyAppMainWindowPowerButtonCustom = new WpfCustom(this);
                    #region Search Criteria
                    this.mMAP_MyAppMainWindowPowerButtonCustom.SearchProperties[WpfControl.PropertyNames.AutomationId] = "MyApp.MainWindow.PowerButton";
                    this.mMAP_MyAppMainWindowPowerButtonCustom.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_MyAppMainWindowPowerButtonCustom;
            }
        }
        
        public MAP_MyAppMainWindowIncreaseButton MAP_MyAppMainWindowIncreaseButton
        {
            get
            {
                if ((this.mMAP_MyAppMainWindowIncreaseButton == null))
                {
                    this.mMAP_MyAppMainWindowIncreaseButton = new MAP_MyAppMainWindowIncreaseButton(this);
                }
                return this.mMAP_MyAppMainWindowIncreaseButton;
            }
        }
        
        public MAP_MyAppMainWindowCounterLabelText MAP_MyAppMainWindowCounterLabelText
        {
            get
            {
                if ((this.mMAP_MyAppMainWindowCounterLabelText == null))
                {
                    this.mMAP_MyAppMainWindowCounterLabelText = new MAP_MyAppMainWindowCounterLabelText(this);
                }
                return this.mMAP_MyAppMainWindowCounterLabelText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mMAP_NEWTABITEMText;
        
        private WpfCustom mMAP_MyAppMainWindowPowerButtonCustom;
        
        private MAP_MyAppMainWindowIncreaseButton mMAP_MyAppMainWindowIncreaseButton;
        
        private MAP_MyAppMainWindowCounterLabelText mMAP_MyAppMainWindowCounterLabelText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_MyAppMainWindowIncreaseButton : WpfButton
    {
        
        public MAP_MyAppMainWindowIncreaseButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "MyApp.MainWindow.IncreaseButton";
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public WpfText MAP_IncreaseText
        {
            get
            {
                if ((this.mMAP_IncreaseText == null))
                {
                    this.mMAP_IncreaseText = new WpfText(this);
                    #region Search Criteria
                    this.mMAP_IncreaseText.SearchProperties[WpfText.PropertyNames.AutomationId] = null;
                    this.mMAP_IncreaseText.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_IncreaseText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mMAP_IncreaseText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_MyAppMainWindowCounterLabelText : WpfText
    {
        
        public MAP_MyAppMainWindowCounterLabelText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "MyApp.MainWindow.CounterLabel";
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public WpfText MAP_0Text
        {
            get
            {
                if ((this.mMAP_0Text == null))
                {
                    this.mMAP_0Text = new WpfText(this);
                    #region Search Criteria
                    this.mMAP_0Text.SearchProperties[WpfText.PropertyNames.AutomationId] = null;
                    this.mMAP_0Text.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_0Text;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mMAP_0Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MAP_MyAppMainWindowTabItem2TabPage : WpfTabPage
    {
        
        public MAP_MyAppMainWindowTabItem2TabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "MyApp.MainWindow.TabItem2";
            this.WindowTitles.Add("MyApp - Counter");
            #endregion
        }
        
        #region Properties
        public WpfText MAP_ANOTHERTABITEMText
        {
            get
            {
                if ((this.mMAP_ANOTHERTABITEMText == null))
                {
                    this.mMAP_ANOTHERTABITEMText = new WpfText(this);
                    #region Search Criteria
                    this.mMAP_ANOTHERTABITEMText.SearchProperties[WpfText.PropertyNames.AutomationId] = null;
                    this.mMAP_ANOTHERTABITEMText.WindowTitles.Add("MyApp - Counter");
                    #endregion
                }
                return this.mMAP_ANOTHERTABITEMText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mMAP_ANOTHERTABITEMText;
        #endregion
    }
}
